import { expect, test } from 'vitest'
import { htmlToTokens, tokensToString } from '../src/lib/agnostic/letterSplitter';

test.for([
    [
        "<em>Hey!</em> You!",
        tokensToString([
            { type: "tag", side: "start", tag: "em" },
            { type: "char", content: "H" },
            { type: "char", content: "e" },
            { type: "char", content: "y" },
            { type: "char", content: "!" },
            { type: "tag", side: "end", tag: "em" },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "Y" },
            { type: "char", content: "o" },
            { type: "char", content: "u" },
            { type: "char", content: "!" },
        ]),
    ],
    [
        "“\u003Cem>Ha.\u003C/em> No, I haven’t.”\n        The server shakes her head.",
        tokensToString([
            { type: "char", content: "“" },
            { type: "tag", side: "start", tag: "em" },
            { type: "char", content: "H" },
            { type: "char", content: "a" },
            { type: "char", content: "." },
            { type: "tag", side: "end", tag: "em" },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "N" },
            { type: "char", content: "o" },
            { type: "char", content: "," },
            { type: "char", content: " " },
            { type: "pause", length: "beat" },
            { type: "char", content: "I" },
            { type: "char", content: " " },
            { type: "char", content: "h" },
            { type: "char", content: "a" },
            { type: "char", content: "v" },
            { type: "char", content: "e" },
            { type: "char", content: "n" },
            { type: "char", content: "’" },
            { type: "char", content: "t" },
            { type: "char", content: "." },
            { type: "char", content: "”" },
            { type: "char", content: " " },
            { type: "pause", length: "br" },
            { type: "char", content: "T" },
            { type: "char", content: "h" },
            { type: "char", content: "e" },
            { type: "char", content: " " },
            { type: "char", content: "s" },
            { type: "char", content: "e" },
            { type: "char", content: "r" },
            { type: "char", content: "v" },
            { type: "char", content: "e" },
            { type: "char", content: "r" },
            { type: "char", content: " " },
            { type: "char", content: "s" },
            { type: "char", content: "h" },
            { type: "char", content: "a" },
            { type: "char", content: "k" },
            { type: "char", content: "e" },
            { type: "char", content: "s" },
            { type: "char", content: " " },
            { type: "char", content: "h" },
            { type: "char", content: "e" },
            { type: "char", content: "r" },
            { type: "char", content: " " },
            { type: "char", content: "h" },
            { type: "char", content: "e" },
            { type: "char", content: "a" },
            { type: "char", content: "d" },
            { type: "char", content: "." },
        ]),
    ],
    [
        "“If he’s leaving fish on any girl’s sofa,\n        she’s certainly much younger than me.”",
        tokensToString([
            { type: "char", content: "“" },
            { type: "char", content: "I" },
            { type: "char", content: "f" },
            { type: "char", content: " " },
            { type: "char", content: "h" },
            { type: "char", content: "e" },
            { type: "char", content: "’" },
            { type: "char", content: "s" },
            { type: "char", content: " " },
            { type: "char", content: "l" },
            { type: "char", content: "e" },
            { type: "char", content: "a" },
            { type: "char", content: "v" },
            { type: "char", content: "i" },
            { type: "char", content: "n" },
            { type: "char", content: "g" },
            { type: "char", content: " " },
            { type: "char", content: "f" },
            { type: "char", content: "i" },
            { type: "char", content: "s" },
            { type: "char", content: "h" },
            { type: "char", content: " " },
            { type: "char", content: "o" },
            { type: "char", content: "n" },
            { type: "char", content: " " },
            { type: "char", content: "a" },
            { type: "char", content: "n" },
            { type: "char", content: "y" },
            { type: "char", content: " " },
            { type: "char", content: "g" },
            { type: "char", content: "i" },
            { type: "char", content: "r" },
            { type: "char", content: "l" },
            { type: "char", content: "’" },
            { type: "char", content: "s" },
            { type: "char", content: " " },
            { type: "char", content: "s" },
            { type: "char", content: "o" },
            { type: "char", content: "f" },
            { type: "char", content: "a" },
            { type: "char", content: "," },
            { type: "char", content: " " },
            { type: "pause", length: "br" },
            { type: "char", content: "s" },
            { type: "char", content: "h" },
            { type: "char", content: "e" },
            { type: "char", content: "’" },
            { type: "char", content: "s" },
            { type: "char", content: " " },
            { type: "char", content: "c" },
            { type: "char", content: "e" },
            { type: "char", content: "r" },
            { type: "char", content: "t" },
            { type: "char", content: "a" },
            { type: "char", content: "i" },
            { type: "char", content: "n" },
            { type: "char", content: "l" },
            { type: "char", content: "y" },
            { type: "char", content: " " },
            { type: "char", content: "m" },
            { type: "char", content: "u" },
            { type: "char", content: "c" },
            { type: "char", content: "h" },
            { type: "char", content: " " },
            { type: "char", content: "y" },
            { type: "char", content: "o" },
            { type: "char", content: "u" },
            { type: "char", content: "n" },
            { type: "char", content: "g" },
            { type: "char", content: "e" },
            { type: "char", content: "r" },
            { type: "char", content: " " },
            { type: "char", content: "t" },
            { type: "char", content: "h" },
            { type: "char", content: "a" },
            { type: "char", content: "n" },
            { type: "char", content: " " },
            { type: "char", content: "m" },
            { type: "char", content: "e" },
            { type: "char", content: "." },
            { type: "char", content: "”" },
        ]),
    ],
    [
        "Well, well, well... wow!",
        tokensToString([
            { type: "char", content: "W" },
            { type: "char", content: "e" },
            { type: "char", content: "l" },
            { type: "char", content: "l" },
            { type: "char", content: "," },
            { type: "char", content: " " },
            { type: "pause", length: "beat" },
            { type: "char", content: "w" },
            { type: "char", content: "e" },
            { type: "char", content: "l" },
            { type: "char", content: "l" },
            { type: "char", content: "," },
            { type: "char", content: " " },
            { type: "pause", length: "beat" },
            { type: "char", content: "w" },
            { type: "char", content: "e" },
            { type: "char", content: "l" },
            { type: "char", content: "l" },
            { type: "char", content: "." },
            { type: "char", content: "." },
            { type: "char", content: "." },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "w" },
            { type: "char", content: "o" },
            { type: "char", content: "w" },
            { type: "char", content: "!" },
        ]),
    ],
    [
        "Here it is. You’ve \u003Cem>arrived\u003C/em>.",
        tokensToString([
            { type: "char", content: "H" },
            { type: "char", content: "e" },
            { type: "char", content: "r" },
            { type: "char", content: "e" },
            { type: "char", content: " " },
            { type: "char", content: "i" },
            { type: "char", content: "t" },
            { type: "char", content: " " },
            { type: "char", content: "i" },
            { type: "char", content: "s" },
            { type: "char", content: "." },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "Y" },
            { type: "char", content: "o" },
            { type: "char", content: "u" },
            { type: "char", content: "’" },
            { type: "char", content: "v" },
            { type: "char", content: "e" },
            { type: "char", content: " " },
            { type: "tag", side: "start", tag: "em" },
            { type: "char", content: "a" },
            { type: "char", content: "r" },
            { type: "char", content: "r" },
            { type: "char", content: "i" },
            { type: "char", content: "v" },
            { type: "char", content: "e" },
            { type: "char", content: "d" },
            { type: "tag", side: "end", tag: "em" },
            { type: "char", content: "." }
        ]),
    ],
    [
        "Ooh&mdash;ahh! Eeh &mdash; uh! Meh&mdash;",
        tokensToString([
            { type: "char", content: "O" },
            { type: "char", content: "o" },
            { type: "char", content: "h" },
            { type: "char", content: "&mdash;" },
            { type: "pause", length: "stop" },
            { type: "char", content: "a" },
            { type: "char", content: "h" },
            { type: "char", content: "h" },
            { type: "char", content: "!" },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "E" },
            { type: "char", content: "e" },
            { type: "char", content: "h" },
            { type: "char", content: " " },
            { type: "char", content: "&mdash;" },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "u" },
            { type: "char", content: "h" },
            { type: "char", content: "!" },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "M" },
            { type: "char", content: "e" },
            { type: "char", content: "h" },
            { type: "char", content: "&mdash;" },
        ]),
    ],
    [
        "“Hey&mdash;” he started.",
        tokensToString([
            { type: "char", content: "“" },
            { type: "char", content: "H" },
            { type: "char", content: "e" },
            { type: "char", content: "y" },
            { type: "char", content: "&mdash;" },
            { type: "char", content: "”" },
            { type: "char", content: " " },
            { type: "pause", length: "stop" },
            { type: "char", content: "h" },
            { type: "char", content: "e" },
            { type: "char", content: " " },
            { type: "char", content: "s" },
            { type: "char", content: "t" },
            { type: "char", content: "a" },
            { type: "char", content: "r" },
            { type: "char", content: "t" },
            { type: "char", content: "e" },
            { type: "char", content: "d" },
            { type: "char", content: "." }
        ]),
    ]
])(htmlToTokens, ([input, output]) => {
    const stringified = tokensToString(htmlToTokens(input));
    console.log(stringified)
    expect(stringified).toBe(output);
});